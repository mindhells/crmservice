directive @requireAuth(
  role: UserRole! = USER,
) on FIELD_DEFINITION

type Query {
    customer(id: String!): Customer
    customers: [Customer!]! @requireAuth(role: USER)
    user(id: String!): User
    users: [User!]! @requireAuth(role: ADMIN)
    login(email:String!, password:String!): String
}

type Mutation {
    addCustomer(input: CustomerInput!): Customer
    editCustomer(id: String!, input: CustomerInput!): Customer
    deleteCustomer(id: String!): Customer
    addUser(input: UserInput!): User
    editUser(id: String!, input: UserInput!): User
    deleteUser(id: String!): User
}

input CustomerInput {
    name: String
    surname: String
}

type Customer {
    id: ID!
    name: String!
    surname: String!
}

enum UserRole {
    USER,
    ADMIN
}

type User {
    id: ID!
    email: String!
    role: UserRole!
}

input UserInput {
    email: String
    password: String
    role: UserRole = USER
}